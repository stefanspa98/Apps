{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefanspa\\\\Desktop\\\\SHA\\\\SHA-C1-Blockchain\\\\Week16\\\\FS-React-ToDoList\\\\my-app\\\\src\\\\Components\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTask() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [allTasks, setAllTasks] = useState([]);\n  function handleInput(e) {\n    setInput(e.target.value);\n  }\n  function addTask() {\n    let newTask = {\n      desc: input,\n      date: Date.now(),\n      isComplete: false\n    };\n    setAllTasks([...allTasks, newTask]);\n    console.log(allTasks);\n  }\n\n  // ? Fuuntion for checking tasks as completed\n  // * Whenever we chack an element we need to select that element by a unique property to then compare it with the list of items in allTasks\n  function toggleComplete(id) {\n    let updatedTaskList = allTasks.map(task => {\n      if (task.date === id) {\n        return {\n          ...task,\n          isComplete: !task.isComplete\n        };\n      } else {\n        return task;\n      }\n    });\n    // ? Updating the list of tasks in the allTasks array\n    setAllTasks(updatedTaskList);\n  }\n  function deleteTask(id) {\n    let updatedTaskList = allTasks.map(task => {\n      if (task.date === id) {\n        return {\n          ...task,\n          isComplete: !task.isComplete\n        };\n      } else {\n        return task;\n      }\n    });\n    // ? Updating the list of tasks in the allTasks array\n    setAllTasks(updatedTaskList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      allTasks: allTasks,\n      toggleComplete: toggleComplete,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTask, \"n6wPt0ueE0w53f0EEWPmID9Kwt4=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useState","TaskList","jsxDEV","_jsxDEV","AddTask","_s","input","setInput","allTasks","setAllTasks","handleInput","e","target","value","addTask","newTask","desc","date","Date","now","isComplete","console","log","toggleComplete","id","updatedTaskList","map","task","deleteTask","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/stefanspa/Desktop/SHA/SHA-C1-Blockchain/Week16/FS-React-ToDoList/my-app/src/Components/AddTask.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nfunction AddTask() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [allTasks, setAllTasks] = useState([]);\r\n\r\n    function handleInput(e) {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    function addTask() {\r\n        let newTask = {\r\n            desc: input,\r\n            date: Date.now(),\r\n            isComplete: false\r\n        };\r\n        setAllTasks([...allTasks, newTask]);\r\n        console.log(allTasks);\r\n    }\r\n\r\n    // ? Fuuntion for checking tasks as completed\r\n    // * Whenever we chack an element we need to select that element by a unique property to then compare it with the list of items in allTasks\r\n    function toggleComplete(id) {\r\n        let updatedTaskList = allTasks.map((task) => {\r\n            if (task.date === id) {\r\n                return { ...task, isComplete: !task.isComplete }\r\n            } else {\r\n                return task;\r\n            }\r\n        })\r\n        // ? Updating the list of tasks in the allTasks array\r\n        setAllTasks(updatedTaskList);\r\n    }\r\n    function deleteTask(id) {\r\n        let updatedTaskList = allTasks.map((task) => {\r\n            if (task.date === id) {\r\n                return { ...task, isComplete: !task.isComplete }\r\n            } else {\r\n                return task;\r\n            }\r\n        })\r\n        // ? Updating the list of tasks in the allTasks array\r\n        setAllTasks(updatedTaskList);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={handleInput} />\r\n            <button onClick={addTask}>Add Task</button>\r\n            <TaskList allTasks={allTasks} toggleComplete={toggleComplete} deleteTask={deleteTask} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASU,WAAWA,CAACC,CAAC,EAAE;IACpBJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B;EAEA,SAASC,OAAOA,CAAA,EAAG;IACf,IAAIC,OAAO,GAAG;MACVC,IAAI,EAAEV,KAAK;MACXW,IAAI,EAAEC,IAAI,CAACC,GAAG,EAAE;MAChBC,UAAU,EAAE;IAChB,CAAC;IACDX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEO,OAAO,CAAC,CAAC;IACnCM,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;EACzB;;EAEA;EACA;EACA,SAASe,cAAcA,CAACC,EAAE,EAAE;IACxB,IAAIC,eAAe,GAAGjB,QAAQ,CAACkB,GAAG,CAAEC,IAAI,IAAK;MACzC,IAAIA,IAAI,CAACV,IAAI,KAAKO,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGG,IAAI;UAAEP,UAAU,EAAE,CAACO,IAAI,CAACP;QAAW,CAAC;MACpD,CAAC,MAAM;QACH,OAAOO,IAAI;MACf;IACJ,CAAC,CAAC;IACF;IACAlB,WAAW,CAACgB,eAAe,CAAC;EAChC;EACA,SAASG,UAAUA,CAACJ,EAAE,EAAE;IACpB,IAAIC,eAAe,GAAGjB,QAAQ,CAACkB,GAAG,CAAEC,IAAI,IAAK;MACzC,IAAIA,IAAI,CAACV,IAAI,KAAKO,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGG,IAAI;UAAEP,UAAU,EAAE,CAACO,IAAI,CAACP;QAAW,CAAC;MACpD,CAAC,MAAM;QACH,OAAOO,IAAI;MACf;IACJ,CAAC,CAAC;IACF;IACAlB,WAAW,CAACgB,eAAe,CAAC;EAChC;EAEA,oBACItB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC5ChC,OAAA;MAAQiC,OAAO,EAAEtB,OAAQ;MAAAe,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3ChC,OAAA,CAACF,QAAQ;MAACO,QAAQ,EAAEA,QAAS;MAACe,cAAc,EAAEA,cAAe;MAACK,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtF;AAEd;AAAC9B,EAAA,CAlDQD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAoDhB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}